import React, { useState, useRef, useEffect } from 'react';
import type { Indicator, IndicatorState } from './types';
import { apiPost } from './api';
import { TradingActionProcessor } from './TradingActionProcessor';
import { initializeAlpacaService } from './AlpacaService';
import BacktestPanel from './BacktestPanel';
import PortfolioPanel from './PortfolioPanel';
import CustomIndicatorPanel from './CustomIndicatorPanel';
import StrategyTemplatePanel from './StrategyTemplatePanel';
import AnalyticsDashboard from './AnalyticsDashboard';
import { CustomIndicator } from './IndicatorBuilder';
import type { TradingStrategy } from './StrategyEngine';

function ChatPanel({
  indicators,
  indicatorStates,
  setIndicatorStates,
  setIndicators,
  token
}) {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [showBacktest, setShowBacktest] = useState(false);
  const [showPortfolio, setShowPortfolio] = useState(false);
  const [showCustomIndicators, setShowCustomIndicators] = useState(false);
  const [showStrategyTemplates, setShowStrategyTemplates] = useState(false);
  const [showAnalytics, setShowAnalytics] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement | null>(null);

  // Initialize Alpaca service (in demo mode for now)
  useEffect(() => {
    // Initialize with demo/paper trading credentials
    // In production, these would come from environment variables or user settings
    initializeAlpacaService({
      apiKey: process.env.REACT_APP_ALPACA_API_KEY || 'demo_key',
      secretKey: process.env.REACT_APP_ALPACA_SECRET_KEY || 'demo_secret',
      paper: true, // Always use paper trading for demo
    });
  }, []);

  // Create trading action processor instance
  const actionProcessor = new TradingActionProcessor(
    indicators,
    indicatorStates,
    setIndicatorStates,
    setIndicators
  );

  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });
    }
  }, [messages]);

  const handleSend = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || !token) return;
    
    const userMessage = input.trim();
    setMessages(msgs => [
      ...msgs,
      { sender: 'user', text: userMessage }
    ]);
    
    setLoading(true);
    setError(null);
    setInput('');
    
    try {
      // Process the message for actions
      const { response: actionResponse, actions } = await actionProcessor.processMessage(userMessage);
      
      // Create bot response with action results
      let botResponse = actionResponse;
      
      // If no actions were performed, provide a helpful AI response
      if (actions.length === 0 || !actions[0].success) {
        // Add some AI-like responses for common queries
        if (userMessage.toLowerCase().includes('help') || userMessage.toLowerCase().includes('what can you do')) {
          botResponse = `I can help you configure your trading bot! Here's what I can do:

üîß **Indicator Management:**
‚Ä¢ Enable/disable indicators: "Enable RSI" or "Turn off MACD"
‚Ä¢ Adjust parameters: "Set RSI period to 20" or "Change SMA to 50"

üìä **Current Status:**
‚Ä¢ You have ${indicators.length} available indicators
‚Ä¢ ${indicatorStates.filter(s => s.enabled).length} are currently active

üìà **Trading Commands:**
‚Ä¢ Buy/Sell stocks: "Buy 10 AAPL" or "Sell 5 TSLA at $300"
‚Ä¢ Get quotes: "What's MSFT price?" or "Get GOOGL quote"
‚Ä¢ Check positions: "Show my positions" or "Show my account"
‚Ä¢ Market status: "Is market open?"

üí° **Try saying:**
‚Ä¢ "Enable Bollinger Bands"
‚Ä¢ "Set MACD fast EMA to 15"
‚Ä¢ "Show me my active indicators"
‚Ä¢ "Disable all indicators"
‚Ä¢ "Buy 10 shares of Apple"
‚Ä¢ "What's Tesla's current price?"
‚Ä¢ "Show my account balance"`;
        } else if (userMessage.toLowerCase().includes('status') || userMessage.toLowerCase().includes('active')) {
          const activeIndicators = indicators
            .map((ind, idx) => ({ ...ind, ...indicatorStates[idx] }))
            .filter(ind => ind.enabled);
          
          if (activeIndicators.length === 0) {
            botResponse = "You don't have any active indicators yet. Try enabling some by saying 'Enable RSI' or 'Turn on MACD'.";
          } else {
            botResponse = `üìä **Active Indicators (${activeIndicators.length}):**\n\n` +
              activeIndicators.map(ind => 
                `‚Ä¢ ${ind.name} (${ind.param}: ${ind.value})`
              ).join('\n') +
              '\n\nYou can adjust these by saying things like "Set RSI period to 25" or disable them with "Turn off MACD".';
          }
        } else if (userMessage.toLowerCase().includes('backtest') || userMessage.toLowerCase().includes('test strategy')) {
          setShowBacktest(true);
          botResponse = "üî¨ **Backtesting Panel Opened!**\n\nI've opened the advanced backtesting panel for you. You can now:\n\n‚Ä¢ Configure your backtest parameters\n‚Ä¢ Test your current indicator setup\n‚Ä¢ Analyze historical performance\n‚Ä¢ View detailed metrics and trade history\n\nThe backtest will use your currently active indicators to simulate trading over the past 6 months. Scroll down to see the backtesting interface!";
        } else if (userMessage.toLowerCase().includes('portfolio') || userMessage.toLowerCase().includes('positions') || userMessage.toLowerCase().includes('risk') || userMessage.toLowerCase().includes('allocation')) {
          setShowPortfolio(true);
          botResponse = "üìä **Portfolio Management Panel Opened!**\n\nI've opened the comprehensive portfolio management interface for you. You can now:\n\n‚Ä¢ **Overview**: View all positions with real-time P&L\n‚Ä¢ **Risk Analysis**: Assess portfolio risk and correlations\n‚Ä¢ **Optimization**: Get rebalancing recommendations\n‚Ä¢ **Attribution**: Analyze performance vs benchmark\n\nüîç **Key Features:**\n‚Ä¢ Real-time position tracking\n‚Ä¢ Advanced risk metrics (VaR, correlation matrix)\n‚Ä¢ Sector exposure analysis\n‚Ä¢ Portfolio optimization suggestions\n‚Ä¢ Performance attribution analysis\n\nScroll down to explore your portfolio analytics!";
        } else if (userMessage.toLowerCase().includes('custom indicator') || userMessage.toLowerCase().includes('create indicator') || userMessage.toLowerCase().includes('indicator builder')) {
          setShowCustomIndicators(true);
          botResponse = "üîß **Custom Indicator Builder Opened!**\n\nI've opened the advanced indicator creation interface for you. You can now:\n\n‚Ä¢ **Create**: Build custom indicators with mathematical formulas\n‚Ä¢ **Library**: Manage your personal indicator collection\n‚Ä¢ **Templates**: Start with pre-built indicator templates\n\nüõ†Ô∏è **Features:**\n‚Ä¢ Visual formula editor with syntax validation\n‚Ä¢ Parameter configuration system\n‚Ä¢ Built-in functions (SMA, EMA, RSI, MACD, etc.)\n‚Ä¢ Performance impact analysis\n‚Ä¢ Import/export capabilities\n‚Ä¢ Template library with common patterns\n\nüí° **Examples:**\n‚Ä¢ RSI Divergence Detector\n‚Ä¢ Adaptive Volatility Index\n‚Ä¢ Volume-Weighted Momentum\n‚Ä¢ Custom Moving Average Crossovers\n\nScroll down to start building your custom indicators!";
        } else if (userMessage.toLowerCase().includes('strategy template') || userMessage.toLowerCase().includes('bot template') || userMessage.toLowerCase().includes('trading strategy') || userMessage.toLowerCase().includes('pre-built bot') || userMessage.toLowerCase().includes('bot preset')) {
          setShowStrategyTemplates(true);
          botResponse = "üöÄ **Strategy Templates & Bot Presets Opened!**\n\nI've opened the comprehensive strategy and bot template library for you. You can now:\n\nü§ñ **Bot Templates:**\n‚Ä¢ **Beginner Bots**: Conservative strategies perfect for learning\n‚Ä¢ **Intermediate Bots**: Balanced risk/reward with trend following\n‚Ä¢ **Advanced Bots**: High-frequency and scalping strategies\n‚Ä¢ **Professional Bots**: Institutional-grade multi-strategy systems\n\nüìä **Strategy Library:**\n‚Ä¢ **RSI Mean Reversion**: Buy oversold, sell overbought\n‚Ä¢ **Moving Average Crossover**: Classic trend following\n‚Ä¢ **Bollinger Band Breakout**: Volatility-based trading\n‚Ä¢ **Custom Strategies**: Build your own from scratch\n\n‚ú® **Key Features:**\n‚Ä¢ Pre-configured indicators and parameters\n‚Ä¢ Risk management settings included\n‚Ä¢ Educational tutorials for each strategy\n‚Ä¢ Performance expectations and capital requirements\n‚Ä¢ Difficulty levels from beginner to expert\n\nüí° **Perfect for:**\n‚Ä¢ New traders wanting proven strategies\n‚Ä¢ Experienced traders seeking new ideas\n‚Ä¢ Anyone wanting to save setup time\n‚Ä¢ Learning different trading approaches\n\nScroll down to explore the templates and find your perfect trading bot!";
        } else if (userMessage.toLowerCase().includes('analytics') || userMessage.toLowerCase().includes('dashboard') || userMessage.toLowerCase().includes('performance analysis') || userMessage.toLowerCase().includes('advanced analytics') || userMessage.toLowerCase().includes('risk analysis')) {
          setShowAnalytics(true);
          botResponse = "üìä **Advanced Analytics Dashboard Opened!**\n\nI've launched the comprehensive analytics dashboard with institutional-grade performance analysis. You now have access to:\n\nüìà **Performance Analytics:**\n‚Ä¢ Cumulative return charts vs benchmark\n‚Ä¢ Rolling performance metrics\n‚Ä¢ Period-by-period return analysis\n‚Ä¢ Risk-adjusted performance ratios\n‚Ä¢ Monthly and annual performance breakdowns\n\n‚ö†Ô∏è **Risk Analysis:**\n‚Ä¢ Value at Risk (VaR) calculations\n‚Ä¢ Drawdown analysis and underwater curves\n‚Ä¢ Volatility decomposition and clustering\n‚Ä¢ Beta analysis and correlation matrices\n‚Ä¢ Downside risk metrics (Sortino, Pain Index)\n\nüéØ **Attribution Analysis:**\n‚Ä¢ Sector and asset contribution analysis\n‚Ä¢ Factor attribution (Market, Size, Value, Momentum)\n‚Ä¢ Timing vs Selection performance breakdown\n‚Ä¢ Interaction effects and currency impact\n\n‚ö° **Efficiency Metrics:**\n‚Ä¢ Sharpe, Sortino, Calmar ratios\n‚Ä¢ Information ratio and tracking error\n‚Ä¢ Up/Down capture ratios\n‚Ä¢ Advanced efficiency measures\n\nüîß **Custom Dashboard:**\n‚Ä¢ Drag-and-drop widget builder\n‚Ä¢ Personalized analytics views\n‚Ä¢ Dashboard templates for different use cases\n‚Ä¢ Real-time data refresh capabilities\n\n‚ú® **Professional Features:**\n‚Ä¢ Benchmark comparison tools\n‚Ä¢ Multiple timeframe analysis\n‚Ä¢ Export capabilities for reports\n‚Ä¢ Advanced charting and visualizations\n\nThis is the same level of analytics used by institutional investors and hedge funds. Perfect for serious traders who want deep insights into their performance!";
        } else if (!actions[0]?.success) {
          // Default response for unrecognized commands
          botResponse = actionResponse;
        }
      }
      
      // Add the bot response
      setMessages(msgs => [
        ...msgs,
        { sender: 'bot', text: botResponse }
      ]);
      
      // Optional: Still send to backend for logging/learning (but don't wait for response)
      const config = {
        indicators: indicators.map((ind, idx) => ({
          name: ind.name,
          value: indicatorStates[idx]?.value,
          enabled: indicatorStates[idx]?.enabled
        }))
      };
      
      // Send to backend asynchronously (don't block UI)
      apiPost('/chat', { message: userMessage, config, actions }, token).catch(() => {
        // Silently handle backend errors - the action was already processed locally
      });
    } catch {
      setError('Failed to send chat.');
    } finally {
      setLoading(false);
    }
  const handleCustomIndicatorCreated = (indicator: CustomIndicator) => {
    // Convert custom indicator to standard indicator format
    const standardIndicator = {
      name: indicator.name,
      param: indicator.parameters.length > 0 ? indicator.parameters[0].name : 'Value',
      min: indicator.parameters.length > 0 ? indicator.parameters[0].min || 0 : 0,
      max: indicator.parameters.length > 0 ? indicator.parameters[0].max || 100 : 100,
      default: indicator.parameters.length > 0 ? indicator.parameters[0].defaultValue : 50,
      step: indicator.parameters.length > 0 ? indicator.parameters[0].step || 1 : 1,
      custom: true,
      customId: indicator.id
    };

    // Add to indicators list
    setIndicators(prev => [...prev, standardIndicator]);
    setIndicatorStates(prev => [...prev, { enabled: false, value: standardIndicator.default }]);

    // Close the custom indicator panel
    setShowCustomIndicators(false);

    // Add success message
    setMessages(msgs => [
      ...msgs,
      { 
        sender: 'bot', 
        text: `‚úÖ **Custom Indicator Created Successfully!**\n\n"${indicator.name}" has been added to your indicator library. You can now:\n\n‚Ä¢ Enable it in the Bot Builder panel\n‚Ä¢ Configure its parameters\n‚Ä¢ Use it in backtesting\n‚Ä¢ Include it in your trading strategies\n\nThe indicator is ready to use with ${indicator.parameters.length} configurable parameter${indicator.parameters.length !== 1 ? 's' : ''}!` 
      }
    ]);
  };
  };

  const handleTemplateApplied = (indicators: Indicator[], indicatorStates: IndicatorState[], strategy: TradingStrategy) => {
    // Apply the template to the current bot configuration
    setIndicators(indicators);
    setIndicatorStates(indicatorStates);

    // Close the template panel
    setShowStrategyTemplates(false);

    // Add success message
    setMessages(msgs => [
      ...msgs,
      { 
        sender: 'bot', 
        text: `‚úÖ **${strategy.name} Applied Successfully!**\n\nüéØ **Strategy Details:**\n‚Ä¢ **Type**: ${strategy.category.replace('_', ' ')}\n‚Ä¢ **Indicators**: ${indicators.length} configured\n‚Ä¢ **Risk Level**: ${strategy.validation.riskScore}/10\n‚Ä¢ **Complexity**: ${strategy.validation.complexity}\n\nüîß **What's Configured:**\n‚Ä¢ All required indicators are enabled\n‚Ä¢ Parameters set to optimal defaults\n‚Ä¢ Risk management rules applied\n‚Ä¢ Entry and exit conditions defined\n\nüöÄ **Next Steps:**\n‚Ä¢ Review the Bot Builder panel for your new configuration\n‚Ä¢ Adjust parameters if needed\n‚Ä¢ Run a backtest to see historical performance\n‚Ä¢ Enable paper trading to test live\n\nYour bot is ready to trade with this proven strategy!` 
      }
    ]);
  };
}
      {/* Backtest Panel */}
      {showBacktest && (
        <BacktestPanel 
          indicators={indicators} 
          indicatorStates={indicatorStates}
        />
      )}
      
      {/* Portfolio Panel */}
      {showPortfolio && <PortfolioPanel />}
      
      {/* Custom Indicator Panel */}
      {showCustomIndicators && (
        <CustomIndicatorPanel 
          onIndicatorCreated={handleCustomIndicatorCreated}
          onClose={() => setShowCustomIndicators(false)}
        />
      )}
      
      {/* Strategy Template Panel */}
      {showStrategyTemplates && (
        <StrategyTemplatePanel 
          onTemplateApplied={handleTemplateApplied}
          onClose={() => setShowStrategyTemplates(false)}
        />
      )}
      
      {/* Analytics Dashboard */}
      {showAnalytics && (
        <AnalyticsDashboard 
          onClose={() => setShowAnalytics(false)}
        />
      )}